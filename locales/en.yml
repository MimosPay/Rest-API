---
en:
  intro: "Introduce"
  title: "API Reference"
  description: "The Mimos Commerce provides a simple and powerful REST API to integrate crypto-currency payments into your business or application. This API reference provides information on available endpoints and how to interact with them."
  swith_lang: "切换至"
  base_url: "Base URL"
  notic: "Note"
  your_api_key: "your API Key"
  setting: "Settings"
  rules: "Rules"
  guide:
    title: "Guides"
    accept_payments: "Accept payments via MimosPay"
    note: "To accept payments via MimosPay, a token will need to be sent with the API request. And the API request will be requiring cryptographically signing before sent."
    get_api_key : "Getting API Key"
    get_api_key_note : "You can generate a token directly from the <code>Settings -> API Keys</code> page."
    get_api_key_step1: "Click <code>Add API Key</code>"
    get_api_key_step2: "Fill the form parameters"
    get_api_key_step3: "Click Button <code>Generate API KEY</code>"
    get_api_key_step4: "Save your API Key and API Secret either click the <code>Copy API KEY</code> or copy them manually"
    get_api_key_step2_label: "Label, (e.g. My MimosPay Client)"
    get_api_key_step2_succ_url: "Success Redirect URL"
    get_api_key_step2_fail_url: "Failure Redirect URL"
    get_api_key_step2_cb_url: "Webhook URL, to receive the events which push by MimosPay"
    api_key_note: "It is used in API request"
    api_secrect_note: "It is used to generate the signature (and only visible once after creation)"
    signing_request: "Signing request"
    signing_request_step1: "Prepare the request headers and body"
    signing_request_step2: "Sort the params by the non-empty key's ASCII in the ascending order and concatenate into <code>stringA</code> with URL key-value format(i.e. key1=value1&key2=value2…)"
    signing_request_step3: "Append the API Secrect to <code>stringA</code> with param name <code>key</code> as <code>stringB</code>"
    signing_request_step4: "Use MD5 encode <code>stringB</code> and convert all characters to uppercasee to get the <code>signatureVal</code>"
    signing_request_step1_ts: "the UTC timestamp when API request, the unit is millisecond. The client timestamp included with the request must be within 5 minutes of the MimosPay system time when the request is received. If not, the request will fail with the <code>Invalid X-MM-TIMESTAMP</code> error"
    signing_request_step1_nonce: "an unique string to enforce idempotence for POST requests."
    signing_request_step1_payload: "request payload"
    signing_request_step2_note: "Pay attention to below rules:"
    signing_request_step2_rule1: "Sort the params name in the ASCII ascending order"
    signing_request_step2_rule2: "The param with empty value is ignored"
    signing_request_step2_rule3: "The param name are case sensitive"
    signing_request_step2_rule4: "If the value is object, stringify the object to a JSON string."
    making_request: "Making request"
    making_request_note: "For more details, please refer to "
    receiving_events: "Receiving events"
    receiving_events_note: "You can receive the event if adding a webhook subscription in <a href='https://w.mimos.io/commerce/en/settings'>Settings</a>."
    receiving_events_webhook_note: "Every MimosPay webhook request includes headers,"
    receiving_events_webhook_signature: "MD5 signature of the request body <code>data</code> field, computed using your webhook shared secret of the API Key"
    receiving_events_webhook_note2: "Always make sure that you verify the webhook signature before acting on it inside your system."
    receiving_events_webhook_signature_content: "The signature content,"
    receiving_events_webhook_in_payload: "in request payload"
    receiving_events_webhook_rule: "And signing the content by follow the"
  charge:
    create_a_charge: "Create a charge"
