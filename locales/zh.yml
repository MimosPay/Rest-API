---
zh:
  intro: "介绍"
  title: "接口文档"
  description: "Mimos Commerce提供了一个简单而强大的REST API，可将加密货币付款集成到您的业务或应用程序中。 该API参考文档提供了有关可用服务的可访问点以及如何与它们交互的信息。"
  swith_lang: "Switch to"
  base_url: "API入口"
  notic: "提示"
  your_api_key: "你的API Key"
  setting: "设置"
  rules: "规则"
  guide:
    title: "接入指南"
    accept_payments: "MimosPay作为支付方式"
    note: "通过MimosPay接受付款，需要在API请求带上Token。并且在请求发送之前需要进行密码签名。"
    get_api_key : "获取API Key"
    get_api_key_note : "在<code>设置 -> API Keys</code>页面中创建生成API Key。"
    get_api_key_step1: "点击<code>添加API Key</code>"
    get_api_key_step2: "填写表单内容"
    get_api_key_step3: "继续点击按钮<code>生成API KEY</code>"
    get_api_key_step4: "点击<code>复制API KEY</code>或者手动复制以保存创建生成的新API Key和API Secret"
    get_api_key_step2_label: "标签, 比如： e电商平台"
    get_api_key_step2_succ_url: "支付成功跳转地址"
    get_api_key_step2_fail_url: "支付失败跳转地址"
    get_api_key_step2_cb_url: "Webhook地址，用于接收MimosPay推送事件的"
    api_key_note: "用于API请求"
    api_secrect_note: "用于对API请求进行签名，创建后仅可见一次"
    signing_request: "对请求签名"
    signing_request_step1: "准备请求头和请求内容"
    signing_request_step2: "将请求头和请求内容以key-value格式按照ASCII码升序排序（value不为空）并以URL键值对(比如：key1=value1&key2=value2…)拼接成字符串<code>stringA</code>"
    signing_request_step3: "再将API Secrect作为<code>key</code>的值拼接到<code>stringA</code>中得到<code>stringB</code>"
    signing_request_step4: "最后使用MD5对<code>stringB</code>做摘要并将结果转换成全部大写的<code>signatureVal</code>"
    signing_request_step1_ts: "API请求带上UTC时间戳，以毫秒为单位。客户端时间戳和系统时间戳最多允许5分钟的时间差，超过此范围将会返回<code>Invalid X-MM-TIMESTAMP</code>异常"
    signing_request_step1_nonce: "唯一的随机字符串用于防止重复请求"
    signing_request_step1_payload: "请求主体内容"
    signing_request_step2_note: "请留意以下规则："
    signing_request_step2_rule1: "参数名ASCII码从小到大排序（字典序）"
    signing_request_step2_rule2: "参数的值为空不参与签名"
    signing_request_step2_rule3: "参数名区分大小写"
    signing_request_step2_rule4: "如果参数的值是一个JSON对象或数组，需要将它进行字符串化处理"
    making_request: "发送请求"
    making_request_note: "更多详情，请参考"
    receiving_events: "订阅事件"
    receiving_events_note: "在<a href='https://w.mimos.io/commerce/en/settings'>设置</a>里订阅（设置Webhook地址）后，你将会收到对应的事件。"
    receiving_events_webhook_note: "所有MimosPay的Webhook请求都会包含以下请求头，"
    receiving_events_webhook_signature: "使用Webhook的共享Secrect，并通过MD5对请求内容中的<code>data</code>字段进行摘要签名"
    receiving_events_webhook_note2: "建议你在收到Webhook请求后，对请求内容进行签名校验"
    receiving_events_webhook_signature_content: "签名的内容包含,"
    receiving_events_webhook_in_payload: "在请求内容中"
    receiving_events_webhook_rule: "签名方式参考"
  charge:
    create_a_charge: "创建充值"
